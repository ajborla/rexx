#!/usr/bin/env bash

create_exercise() {
    # Ensure configlet utility exists
    which configlet >/dev/null \
        || { echo "ERROR: configlet utility not in PATH" ; exit 1 ; }

    # Create practice exercise skeleton
    configlet -v d sync --exercise ${exercise} --docs --update --yes --offline
    configlet -v d sync --exercise ${exercise} --metadata --update --yes --offline
    configlet -v d sync --exercise ${exercise} --tests include --update --offline

    # Ensure exercise directories created
    [ -d exercises/practice/$exercise ] \
        || { echo "ERROR: Error creating exercise directory" ; exit 1 ; }
}

configure_exercise() {
    # Ensure exercise directories exist
    [ -d exercises/practice/$exercise ] \
        || { echo "ERROR: Exercise directory does not exist" ; exit 1 ; }

    # Relocate into practice exercise directory
    cd exercises/practice/${exercise}

    ### configuration tasks performed here
    echo "Now in $(pwd) practice directory"

    # Return to top-level
    cd - 2>&1 >/dev/null
}

# Two arguments expected
[ $# -ne 2 -o -z "${1}" -o -z "${2}" ] \
    && { echo "Usage: ${0} create|configure exercise" ; exit 1 ; }

# Uppercase `mode` for easier comparison
mode="${1^^}" ; exercise="${2}"

# Ascertain script location is `bin`
[ "$(basename $(dirname ${0}))" == "bin" ] \
    || { echo "ERROR: Current script must reside in bin directory" ; exit 1 ; }

# Ascertain current directory is top-level by checking for directories
[ -d "./bin" -a -d "./exercises/practice" ] \
    || { echo "ERROR: Current directory is not top-level directory" ; exit 1 ; }

# Ensure exercise source file exists
[ -f "${exercise}.rexx" ] \
    || { echo "ERROR: Ensure source file resides in current directory" ; exit 1 ; }

# Ensure top-level `config.json` contains a valid exercise entry
grep -q '"slug": "'${exercise}'",$' config.json \
    || { echo "ERROR: Include entry for ${exercise} in top-level config.json file." ; exit 1 ; }

# Check `mode` validity
case "${mode}" in
    CREATE)    create_exercise "${exercise}" ;;
    CONFIGURE) configure_exercise "${exercise}" ;;
    *) echo "Usage: ${0} create|configure exercise" ; exit 1 ;;
esac

echo "${mode} - ${exercise} - $(pwd)"
